// Compiled by ClojureScript 0.0-2138
goog.provide('crate.compiler');
goog.require('cljs.core');
goog.require('crate.binding');
goog.require('crate.binding');
goog.require('clojure.string');
goog.require('clojure.string');
goog.require('goog.style');
goog.require('goog.style');
goog.require('goog.dom');
goog.require('goog.dom');
crate.compiler.xmlns = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"xhtml","xhtml",1127939989),"http://www.w3.org/1999/xhtml",new cljs.core.Keyword(null,"svg","svg",1014018518),"http://www.w3.org/2000/svg"], null);
crate.compiler.group_id = cljs.core.atom.call(null,0);
crate.compiler.bindings = cljs.core.atom.call(null,cljs.core.PersistentVector.EMPTY);
crate.compiler.capture_binding = (function capture_binding(tag,b){return cljs.core.swap_BANG_.call(null,crate.compiler.bindings,cljs.core.conj,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag,b], null));
});
crate.compiler.Element = (function (){var obj15111 = {};return obj15111;
})();
crate.compiler._elem = (function _elem(this$){if((function (){var and__3396__auto__ = this$;if(and__3396__auto__)
{return this$.crate$compiler$Element$_elem$arity$1;
} else
{return and__3396__auto__;
}
})())
{return this$.crate$compiler$Element$_elem$arity$1(this$);
} else
{var x__4029__auto__ = (((this$ == null))?null:this$);return (function (){var or__3408__auto__ = (crate.compiler._elem[goog.typeOf(x__4029__auto__)]);if(or__3408__auto__)
{return or__3408__auto__;
} else
{var or__3408__auto____$1 = (crate.compiler._elem["_"]);if(or__3408__auto____$1)
{return or__3408__auto____$1;
} else
{throw cljs.core.missing_protocol.call(null,"Element.-elem",this$);
}
}
})().call(null,this$);
}
});
crate.compiler.as_content = (function as_content(parent,content){var seq__15118 = cljs.core.seq.call(null,content);var chunk__15119 = null;var count__15120 = 0;var i__15121 = 0;while(true){
if((i__15121 < count__15120))
{var c = cljs.core._nth.call(null,chunk__15119,i__15121);var child_15124 = (((function (){var G__15122 = c;if(G__15122)
{var bit__4052__auto__ = null;if(cljs.core.truth_((function (){var or__3408__auto__ = bit__4052__auto__;if(cljs.core.truth_(or__3408__auto__))
{return or__3408__auto__;
} else
{return G__15122.crate$compiler$Element$;
}
})()))
{return true;
} else
{if((!G__15122.cljs$lang$protocol_mask$partition$))
{return cljs.core.native_satisfies_QMARK_.call(null,crate.compiler.Element,G__15122);
} else
{return false;
}
}
} else
{return cljs.core.native_satisfies_QMARK_.call(null,crate.compiler.Element,G__15122);
}
})())?crate.compiler._elem.call(null,c):(((c == null))?null:((cljs.core.map_QMARK_.call(null,c))?(function(){throw "Maps cannot be used as content"})():((typeof c === 'string')?goog.dom.createTextNode(c):((cljs.core.vector_QMARK_.call(null,c))?crate.compiler.elem_factory.call(null,c):((cljs.core.seq_QMARK_.call(null,c))?as_content.call(null,parent,c):((crate.binding.binding_coll_QMARK_.call(null,c))?(function (){crate.compiler.capture_binding.call(null,new cljs.core.Keyword(null,"coll","coll",1016963678),c);
return as_content.call(null,parent,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [crate.binding.value.call(null,c)], null));
})():((crate.binding.binding_QMARK_.call(null,c))?(function (){crate.compiler.capture_binding.call(null,new cljs.core.Keyword(null,"text","text",1017460895),c);
return as_content.call(null,parent,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [crate.binding.value.call(null,c)], null));
})():(cljs.core.truth_(c.nodeName)?c:(cljs.core.truth_(c.get)?c.get(0):((new cljs.core.Keyword(null,"else","else",1017020587))?goog.dom.createTextNode([cljs.core.str(c)].join('')):null)))))))))));if(cljs.core.truth_(child_15124))
{goog.dom.appendChild(parent,child_15124);
} else
{}
{
var G__15125 = seq__15118;
var G__15126 = chunk__15119;
var G__15127 = count__15120;
var G__15128 = (i__15121 + 1);
seq__15118 = G__15125;
chunk__15119 = G__15126;
count__15120 = G__15127;
i__15121 = G__15128;
continue;
}
} else
{var temp__4092__auto__ = cljs.core.seq.call(null,seq__15118);if(temp__4092__auto__)
{var seq__15118__$1 = temp__4092__auto__;if(cljs.core.chunked_seq_QMARK_.call(null,seq__15118__$1))
{var c__4150__auto__ = cljs.core.chunk_first.call(null,seq__15118__$1);{
var G__15129 = cljs.core.chunk_rest.call(null,seq__15118__$1);
var G__15130 = c__4150__auto__;
var G__15131 = cljs.core.count.call(null,c__4150__auto__);
var G__15132 = 0;
seq__15118 = G__15129;
chunk__15119 = G__15130;
count__15120 = G__15131;
i__15121 = G__15132;
continue;
}
} else
{var c = cljs.core.first.call(null,seq__15118__$1);var child_15133 = (((function (){var G__15123 = c;if(G__15123)
{var bit__4052__auto__ = null;if(cljs.core.truth_((function (){var or__3408__auto__ = bit__4052__auto__;if(cljs.core.truth_(or__3408__auto__))
{return or__3408__auto__;
} else
{return G__15123.crate$compiler$Element$;
}
})()))
{return true;
} else
{if((!G__15123.cljs$lang$protocol_mask$partition$))
{return cljs.core.native_satisfies_QMARK_.call(null,crate.compiler.Element,G__15123);
} else
{return false;
}
}
} else
{return cljs.core.native_satisfies_QMARK_.call(null,crate.compiler.Element,G__15123);
}
})())?crate.compiler._elem.call(null,c):(((c == null))?null:((cljs.core.map_QMARK_.call(null,c))?(function(){throw "Maps cannot be used as content"})():((typeof c === 'string')?goog.dom.createTextNode(c):((cljs.core.vector_QMARK_.call(null,c))?crate.compiler.elem_factory.call(null,c):((cljs.core.seq_QMARK_.call(null,c))?as_content.call(null,parent,c):((crate.binding.binding_coll_QMARK_.call(null,c))?(function (){crate.compiler.capture_binding.call(null,new cljs.core.Keyword(null,"coll","coll",1016963678),c);
return as_content.call(null,parent,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [crate.binding.value.call(null,c)], null));
})():((crate.binding.binding_QMARK_.call(null,c))?(function (){crate.compiler.capture_binding.call(null,new cljs.core.Keyword(null,"text","text",1017460895),c);
return as_content.call(null,parent,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [crate.binding.value.call(null,c)], null));
})():(cljs.core.truth_(c.nodeName)?c:(cljs.core.truth_(c.get)?c.get(0):((new cljs.core.Keyword(null,"else","else",1017020587))?goog.dom.createTextNode([cljs.core.str(c)].join('')):null)))))))))));if(cljs.core.truth_(child_15133))
{goog.dom.appendChild(parent,child_15133);
} else
{}
{
var G__15134 = cljs.core.next.call(null,seq__15118__$1);
var G__15135 = null;
var G__15136 = 0;
var G__15137 = 0;
seq__15118 = G__15134;
chunk__15119 = G__15135;
count__15120 = G__15136;
i__15121 = G__15137;
continue;
}
}
} else
{return null;
}
}
break;
}
});
crate.compiler.dom_binding = (function (){var method_table__4260__auto__ = cljs.core.atom.call(null,cljs.core.PersistentArrayMap.EMPTY);var prefer_table__4261__auto__ = cljs.core.atom.call(null,cljs.core.PersistentArrayMap.EMPTY);var method_cache__4262__auto__ = cljs.core.atom.call(null,cljs.core.PersistentArrayMap.EMPTY);var cached_hierarchy__4263__auto__ = cljs.core.atom.call(null,cljs.core.PersistentArrayMap.EMPTY);var hierarchy__4264__auto__ = cljs.core.get.call(null,cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"hierarchy","hierarchy",3129050535),cljs.core.get_global_hierarchy.call(null));return (new cljs.core.MultiFn("dom-binding",(function (type,_,___$1){return type;
}),new cljs.core.Keyword(null,"default","default",2558708147),hierarchy__4264__auto__,method_table__4260__auto__,prefer_table__4261__auto__,method_cache__4262__auto__,cached_hierarchy__4263__auto__));
})();
cljs.core._add_method.call(null,crate.compiler.dom_binding,new cljs.core.Keyword(null,"text","text",1017460895),(function (_,b,elem){return crate.binding.on_change.call(null,b,(function (v){goog.dom.removeChildren(elem);
return crate.compiler.as_content.call(null,elem,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [v], null));
}));
}));
cljs.core._add_method.call(null,crate.compiler.dom_binding,new cljs.core.Keyword(null,"attr","attr",1016909155),(function (_,p__15138,elem){var vec__15139 = p__15138;var k = cljs.core.nth.call(null,vec__15139,0,null);var b = cljs.core.nth.call(null,vec__15139,1,null);return crate.binding.on_change.call(null,b,(function (v){return crate.compiler.dom_attr.call(null,elem,k,v);
}));
}));
cljs.core._add_method.call(null,crate.compiler.dom_binding,new cljs.core.Keyword(null,"style","style",1123684643),(function (_,p__15140,elem){var vec__15141 = p__15140;var k = cljs.core.nth.call(null,vec__15141,0,null);var b = cljs.core.nth.call(null,vec__15141,1,null);return crate.binding.on_change.call(null,b,(function (v){if(cljs.core.truth_(k))
{return crate.compiler.dom_style.call(null,elem,k,v);
} else
{return crate.compiler.dom_style.call(null,elem,v);
}
}));
}));
crate.compiler.dom_add = (function dom_add(bc,parent,elem,v){var temp__4090__auto__ = crate.binding.opt.call(null,bc,new cljs.core.Keyword(null,"add","add",1014000659));if(cljs.core.truth_(temp__4090__auto__))
{var adder = temp__4090__auto__;return adder.call(null,parent,elem,v);
} else
{return goog.dom.appendChild(parent,elem);
}
});
crate.compiler.dom_remove = (function dom_remove(bc,elem){var temp__4090__auto__ = crate.binding.opt.call(null,bc,new cljs.core.Keyword(null,"remove","remove",4374260726));if(cljs.core.truth_(temp__4090__auto__))
{var remover = temp__4090__auto__;return remover.call(null,elem);
} else
{return goog.dom.removeNode(elem);
}
});
cljs.core._add_method.call(null,crate.compiler.dom_binding,new cljs.core.Keyword(null,"coll","coll",1016963678),(function (_,bc,parent){return crate.binding.on_change.call(null,bc,(function (type,elem,v){var pred__15142 = cljs.core._EQ_;var expr__15143 = type;if(cljs.core.truth_(pred__15142.call(null,new cljs.core.Keyword(null,"add","add",1014000659),expr__15143)))
{return crate.compiler.dom_add.call(null,bc,parent,elem,v);
} else
{if(cljs.core.truth_(pred__15142.call(null,new cljs.core.Keyword(null,"remove","remove",4374260726),expr__15143)))
{return crate.compiler.dom_remove.call(null,bc,elem);
} else
{throw (new Error([cljs.core.str("No matching clause: "),cljs.core.str(expr__15143)].join('')));
}
}
}));
}));
crate.compiler.handle_bindings = (function handle_bindings(bs,elem){var seq__15151 = cljs.core.seq.call(null,bs);var chunk__15152 = null;var count__15153 = 0;var i__15154 = 0;while(true){
if((i__15154 < count__15153))
{var vec__15155 = cljs.core._nth.call(null,chunk__15152,i__15154);var type = cljs.core.nth.call(null,vec__15155,0,null);var b = cljs.core.nth.call(null,vec__15155,1,null);crate.compiler.dom_binding.call(null,type,b,elem);
{
var G__15157 = seq__15151;
var G__15158 = chunk__15152;
var G__15159 = count__15153;
var G__15160 = (i__15154 + 1);
seq__15151 = G__15157;
chunk__15152 = G__15158;
count__15153 = G__15159;
i__15154 = G__15160;
continue;
}
} else
{var temp__4092__auto__ = cljs.core.seq.call(null,seq__15151);if(temp__4092__auto__)
{var seq__15151__$1 = temp__4092__auto__;if(cljs.core.chunked_seq_QMARK_.call(null,seq__15151__$1))
{var c__4150__auto__ = cljs.core.chunk_first.call(null,seq__15151__$1);{
var G__15161 = cljs.core.chunk_rest.call(null,seq__15151__$1);
var G__15162 = c__4150__auto__;
var G__15163 = cljs.core.count.call(null,c__4150__auto__);
var G__15164 = 0;
seq__15151 = G__15161;
chunk__15152 = G__15162;
count__15153 = G__15163;
i__15154 = G__15164;
continue;
}
} else
{var vec__15156 = cljs.core.first.call(null,seq__15151__$1);var type = cljs.core.nth.call(null,vec__15156,0,null);var b = cljs.core.nth.call(null,vec__15156,1,null);crate.compiler.dom_binding.call(null,type,b,elem);
{
var G__15165 = cljs.core.next.call(null,seq__15151__$1);
var G__15166 = null;
var G__15167 = 0;
var G__15168 = 0;
seq__15151 = G__15165;
chunk__15152 = G__15166;
count__15153 = G__15167;
i__15154 = G__15168;
continue;
}
}
} else
{return null;
}
}
break;
}
});
crate.compiler.dom_style = (function() {
var dom_style = null;
var dom_style__2 = (function (elem,v){if(typeof v === 'string')
{elem.setAttribute("style",v);
} else
{if(cljs.core.map_QMARK_.call(null,v))
{var seq__15175_15181 = cljs.core.seq.call(null,v);var chunk__15176_15182 = null;var count__15177_15183 = 0;var i__15178_15184 = 0;while(true){
if((i__15178_15184 < count__15177_15183))
{var vec__15179_15185 = cljs.core._nth.call(null,chunk__15176_15182,i__15178_15184);var k_15186 = cljs.core.nth.call(null,vec__15179_15185,0,null);var v_15187__$1 = cljs.core.nth.call(null,vec__15179_15185,1,null);dom_style.call(null,elem,k_15186,v_15187__$1);
{
var G__15188 = seq__15175_15181;
var G__15189 = chunk__15176_15182;
var G__15190 = count__15177_15183;
var G__15191 = (i__15178_15184 + 1);
seq__15175_15181 = G__15188;
chunk__15176_15182 = G__15189;
count__15177_15183 = G__15190;
i__15178_15184 = G__15191;
continue;
}
} else
{var temp__4092__auto___15192 = cljs.core.seq.call(null,seq__15175_15181);if(temp__4092__auto___15192)
{var seq__15175_15193__$1 = temp__4092__auto___15192;if(cljs.core.chunked_seq_QMARK_.call(null,seq__15175_15193__$1))
{var c__4150__auto___15194 = cljs.core.chunk_first.call(null,seq__15175_15193__$1);{
var G__15195 = cljs.core.chunk_rest.call(null,seq__15175_15193__$1);
var G__15196 = c__4150__auto___15194;
var G__15197 = cljs.core.count.call(null,c__4150__auto___15194);
var G__15198 = 0;
seq__15175_15181 = G__15195;
chunk__15176_15182 = G__15196;
count__15177_15183 = G__15197;
i__15178_15184 = G__15198;
continue;
}
} else
{var vec__15180_15199 = cljs.core.first.call(null,seq__15175_15193__$1);var k_15200 = cljs.core.nth.call(null,vec__15180_15199,0,null);var v_15201__$1 = cljs.core.nth.call(null,vec__15180_15199,1,null);dom_style.call(null,elem,k_15200,v_15201__$1);
{
var G__15202 = cljs.core.next.call(null,seq__15175_15193__$1);
var G__15203 = null;
var G__15204 = 0;
var G__15205 = 0;
seq__15175_15181 = G__15202;
chunk__15176_15182 = G__15203;
count__15177_15183 = G__15204;
i__15178_15184 = G__15205;
continue;
}
}
} else
{}
}
break;
}
} else
{if(crate.binding.binding_QMARK_.call(null,v))
{crate.compiler.capture_binding.call(null,new cljs.core.Keyword(null,"style","style",1123684643),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,v], null));
dom_style.call(null,elem,crate.binding.value.call(null,v));
} else
{}
}
}
return elem;
});
var dom_style__3 = (function (elem,k,v){var v__$1 = ((crate.binding.binding_QMARK_.call(null,v))?(function (){crate.compiler.capture_binding.call(null,new cljs.core.Keyword(null,"style","style",1123684643),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,v], null));
return crate.binding.value.call(null,v);
})():v);return goog.style.setStyle(elem,cljs.core.name.call(null,k),v__$1);
});
dom_style = function(elem,k,v){
switch(arguments.length){
case 2:
return dom_style__2.call(this,elem,k);
case 3:
return dom_style__3.call(this,elem,k,v);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dom_style.cljs$core$IFn$_invoke$arity$2 = dom_style__2;
dom_style.cljs$core$IFn$_invoke$arity$3 = dom_style__3;
return dom_style;
})()
;
crate.compiler.dom_attr = (function() {
var dom_attr = null;
var dom_attr__2 = (function (elem,attrs){if(cljs.core.truth_(elem))
{if(!(cljs.core.map_QMARK_.call(null,attrs)))
{return elem.getAttribute(cljs.core.name.call(null,attrs));
} else
{var seq__15212_15218 = cljs.core.seq.call(null,attrs);var chunk__15213_15219 = null;var count__15214_15220 = 0;var i__15215_15221 = 0;while(true){
if((i__15215_15221 < count__15214_15220))
{var vec__15216_15222 = cljs.core._nth.call(null,chunk__15213_15219,i__15215_15221);var k_15223 = cljs.core.nth.call(null,vec__15216_15222,0,null);var v_15224 = cljs.core.nth.call(null,vec__15216_15222,1,null);dom_attr.call(null,elem,k_15223,v_15224);
{
var G__15225 = seq__15212_15218;
var G__15226 = chunk__15213_15219;
var G__15227 = count__15214_15220;
var G__15228 = (i__15215_15221 + 1);
seq__15212_15218 = G__15225;
chunk__15213_15219 = G__15226;
count__15214_15220 = G__15227;
i__15215_15221 = G__15228;
continue;
}
} else
{var temp__4092__auto___15229 = cljs.core.seq.call(null,seq__15212_15218);if(temp__4092__auto___15229)
{var seq__15212_15230__$1 = temp__4092__auto___15229;if(cljs.core.chunked_seq_QMARK_.call(null,seq__15212_15230__$1))
{var c__4150__auto___15231 = cljs.core.chunk_first.call(null,seq__15212_15230__$1);{
var G__15232 = cljs.core.chunk_rest.call(null,seq__15212_15230__$1);
var G__15233 = c__4150__auto___15231;
var G__15234 = cljs.core.count.call(null,c__4150__auto___15231);
var G__15235 = 0;
seq__15212_15218 = G__15232;
chunk__15213_15219 = G__15233;
count__15214_15220 = G__15234;
i__15215_15221 = G__15235;
continue;
}
} else
{var vec__15217_15236 = cljs.core.first.call(null,seq__15212_15230__$1);var k_15237 = cljs.core.nth.call(null,vec__15217_15236,0,null);var v_15238 = cljs.core.nth.call(null,vec__15217_15236,1,null);dom_attr.call(null,elem,k_15237,v_15238);
{
var G__15239 = cljs.core.next.call(null,seq__15212_15230__$1);
var G__15240 = null;
var G__15241 = 0;
var G__15242 = 0;
seq__15212_15218 = G__15239;
chunk__15213_15219 = G__15240;
count__15214_15220 = G__15241;
i__15215_15221 = G__15242;
continue;
}
}
} else
{}
}
break;
}
return elem;
}
} else
{return null;
}
});
var dom_attr__3 = (function (elem,k,v){if(cljs.core._EQ_.call(null,k,new cljs.core.Keyword(null,"style","style",1123684643)))
{crate.compiler.dom_style.call(null,elem,v);
} else
{var v_15243__$1 = ((crate.binding.binding_QMARK_.call(null,v))?(function (){crate.compiler.capture_binding.call(null,new cljs.core.Keyword(null,"attr","attr",1016909155),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,v], null));
return crate.binding.value.call(null,v);
})():v);elem.setAttribute(cljs.core.name.call(null,k),v_15243__$1);
}
return elem;
});
dom_attr = function(elem,k,v){
switch(arguments.length){
case 2:
return dom_attr__2.call(this,elem,k);
case 3:
return dom_attr__3.call(this,elem,k,v);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dom_attr.cljs$core$IFn$_invoke$arity$2 = dom_attr__2;
dom_attr.cljs$core$IFn$_invoke$arity$3 = dom_attr__3;
return dom_attr;
})()
;
/**
* Regular expression that parses a CSS-style id and class from a tag name.
*/
crate.compiler.re_tag = /([^\s\.#]+)(?:#([^\s\.#]+))?(?:\.([^\s#]+))?/;
crate.compiler.normalize_map_attrs = (function normalize_map_attrs(map_attrs){return cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.call(null,(function (p__15246){var vec__15247 = p__15246;var n = cljs.core.nth.call(null,vec__15247,0,null);var v = cljs.core.nth.call(null,vec__15247,1,null);if(v === true)
{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [n,cljs.core.name.call(null,n)], null);
} else
{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [n,v], null);
}
}),cljs.core.filter.call(null,cljs.core.comp.call(null,cljs.core.boolean$,cljs.core.second),map_attrs)));
});
/**
* Ensure a tag vector is of the form [tag-name attrs content].
*/
crate.compiler.normalize_element = (function normalize_element(p__15249){var vec__15254 = p__15249;var tag = cljs.core.nth.call(null,vec__15254,0,null);var content = cljs.core.nthnext.call(null,vec__15254,1);if(!(((tag instanceof cljs.core.Keyword)) || ((tag instanceof cljs.core.Symbol)) || (typeof tag === 'string')))
{throw [cljs.core.str(tag),cljs.core.str(" is not a valid tag name.")].join('');
} else
{}
var vec__15255 = cljs.core.re_matches.call(null,crate.compiler.re_tag,cljs.core.name.call(null,tag));var _ = cljs.core.nth.call(null,vec__15255,0,null);var tag__$1 = cljs.core.nth.call(null,vec__15255,1,null);var id = cljs.core.nth.call(null,vec__15255,2,null);var class$ = cljs.core.nth.call(null,vec__15255,3,null);var vec__15256 = (function (){var vec__15257 = clojure.string.split.call(null,tag__$1,/:/);var nsp = cljs.core.nth.call(null,vec__15257,0,null);var t = cljs.core.nth.call(null,vec__15257,1,null);var ns_xmlns = crate.compiler.xmlns.call(null,cljs.core.keyword.call(null,nsp));if(cljs.core.truth_(t))
{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var or__3408__auto__ = ns_xmlns;if(cljs.core.truth_(or__3408__auto__))
{return or__3408__auto__;
} else
{return nsp;
}
})(),t], null);
} else
{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"xhtml","xhtml",1127939989).cljs$core$IFn$_invoke$arity$1(crate.compiler.xmlns),nsp], null);
}
})();var nsp = cljs.core.nth.call(null,vec__15256,0,null);var tag__$2 = cljs.core.nth.call(null,vec__15256,1,null);var tag_attrs = cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.filter.call(null,((function (vec__15255,_,tag__$1,id,class$,vec__15256,nsp,tag__$2){
return (function (p1__15248_SHARP_){return !((cljs.core.second.call(null,p1__15248_SHARP_) == null));
});})(vec__15255,_,tag__$1,id,class$,vec__15256,nsp,tag__$2))
,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"id","id",1013907597),(function (){var or__3408__auto__ = id;if(cljs.core.truth_(or__3408__auto__))
{return or__3408__auto__;
} else
{return null;
}
})(),new cljs.core.Keyword(null,"class","class",1108647146),(cljs.core.truth_(class$)?clojure.string.replace.call(null,class$,/\./," "):null)], null)));var map_attrs = cljs.core.first.call(null,content);if(cljs.core.map_QMARK_.call(null,map_attrs))
{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [nsp,tag__$2,cljs.core.merge.call(null,tag_attrs,crate.compiler.normalize_map_attrs.call(null,map_attrs)),cljs.core.next.call(null,content)], null);
} else
{return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [nsp,tag__$2,tag_attrs,content], null);
}
});
crate.compiler.parse_content = (function parse_content(elem,content){var attrs = cljs.core.first.call(null,content);if(cljs.core.map_QMARK_.call(null,attrs))
{crate.compiler.dom_attr.call(null,elem,attrs);
return cljs.core.rest.call(null,content);
} else
{return content;
}
});
crate.compiler.create_elem = (cljs.core.truth_(document.createElementNS)?(function (nsp,tag){return document.createElementNS(nsp,tag);
}):(function (_,tag){return document.createElement(tag);
}));
crate.compiler.elem_factory = (function elem_factory(tag_def){var bindings15260 = crate.compiler.bindings;try{crate.compiler.bindings = cljs.core.atom.call(null,cljs.core.PersistentVector.EMPTY);
var vec__15261 = crate.compiler.normalize_element.call(null,tag_def);var nsp = cljs.core.nth.call(null,vec__15261,0,null);var tag = cljs.core.nth.call(null,vec__15261,1,null);var attrs = cljs.core.nth.call(null,vec__15261,2,null);var content = cljs.core.nth.call(null,vec__15261,3,null);var elem = crate.compiler.create_elem.call(null,nsp,tag);crate.compiler.dom_attr.call(null,elem,attrs);
crate.compiler.as_content.call(null,elem,content);
crate.compiler.handle_bindings.call(null,cljs.core.deref.call(null,crate.compiler.bindings),elem);
return elem;
}finally {crate.compiler.bindings = bindings15260;
}});
/**
* Add an optional attribute argument to a function that returns a vector tag.
*/
crate.compiler.add_optional_attrs = (function add_optional_attrs(func){return (function() { 
var G__15264__delegate = function (args){if(cljs.core.map_QMARK_.call(null,cljs.core.first.call(null,args)))
{var vec__15263 = cljs.core.apply.call(null,func,cljs.core.rest.call(null,args));var tag = cljs.core.nth.call(null,vec__15263,0,null);var body = cljs.core.nthnext.call(null,vec__15263,1);if(cljs.core.map_QMARK_.call(null,cljs.core.first.call(null,body)))
{return cljs.core.apply.call(null,cljs.core.vector,tag,cljs.core.merge.call(null,cljs.core.first.call(null,body),cljs.core.first.call(null,args)),cljs.core.rest.call(null,body));
} else
{return cljs.core.apply.call(null,cljs.core.vector,tag,cljs.core.first.call(null,args),body);
}
} else
{return cljs.core.apply.call(null,func,args);
}
};
var G__15264 = function (var_args){
var args = null;if (arguments.length > 0) {
  args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return G__15264__delegate.call(this,args);};
G__15264.cljs$lang$maxFixedArity = 0;
G__15264.cljs$lang$applyTo = (function (arglist__15265){
var args = cljs.core.seq(arglist__15265);
return G__15264__delegate(args);
});
G__15264.cljs$core$IFn$_invoke$arity$variadic = G__15264__delegate;
return G__15264;
})()
;
});
