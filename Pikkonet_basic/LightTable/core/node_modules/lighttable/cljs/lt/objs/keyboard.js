// Compiled by ClojureScript 0.0-2138
goog.provide('lt.objs.keyboard');
goog.require('cljs.core');
goog.require('lt.util.js');
goog.require('lt.objs.app');
goog.require('lt.util.js');
goog.require('lt.objs.context');
goog.require('lt.objs.platform');
goog.require('lt.objs.metrics');
goog.require('lt.objs.context');
goog.require('clojure.string');
goog.require('lt.util.events');
goog.require('lt.objs.command');
goog.require('lt.objs.platform');
goog.require('lt.objs.app');
goog.require('clojure.string');
goog.require('lt.object');
goog.require('lt.object');
goog.require('lt.objs.metrics');
goog.require('lt.objs.command');
goog.require('lt.util.events');
lt.objs.keyboard.capturing_QMARK_ = true;
lt.objs.keyboard.keys = cljs.core.atom.call(null,cljs.core.PersistentArrayMap.EMPTY);
lt.objs.keyboard.key_map = cljs.core.atom.call(null,cljs.core.PersistentArrayMap.EMPTY);
lt.objs.keyboard.chords = (function (){var obj9459 = {"current":null,"chords":cljs.core.PersistentHashSet.EMPTY};return obj9459;
})();
lt.objs.keyboard.chord_timeout = 1000;
lt.objs.keyboard.activity = (function activity(){return lt.objs.metrics.used_BANG_.call(null);
});
lt.objs.keyboard.chord_variants = (function chord_variants(k){var splits = cljs.core.butlast.call(null,clojure.string.split.call(null,k," "));return cljs.core.reduce.call(null,(function (res,cur){return cljs.core.conj.call(null,res,[cljs.core.str(cljs.core.last.call(null,res)),cljs.core.str(" "),cljs.core.str(cur)].join(''));
}),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null,splits)], null),cljs.core.rest.call(null,splits));
});
lt.objs.keyboard.extract_chords = (function extract_chords(ks){return cljs.core.reduce.call(null,(function (chords,p__9462){var vec__9463 = p__9462;var k = cljs.core.nth.call(null,vec__9463,0,null);var _ = cljs.core.nth.call(null,vec__9463,1,null);if(!((k.indexOf(" ") > -1)))
{return chords;
} else
{return cljs.core.apply.call(null,cljs.core.conj,chords,lt.objs.keyboard.chord_variants.call(null,k));
}
}),cljs.core.PersistentHashSet.EMPTY,ks);
});
lt.objs.keyboard.merge_keys = (function merge_keys(ctx){var ctx_set = lt.object.specificity_sort.call(null,ctx,new cljs.core.Keyword(null,"down","down",1016993812));var ks = cljs.core.deref.call(null,lt.objs.keyboard.keys);var neue = cljs.core.apply.call(null,cljs.core.merge,cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.call(null,ks,ctx_set));lt.objs.keyboard.chords = (function (){var obj9467 = {"current":null,"chords":lt.objs.keyboard.extract_chords.call(null,neue)};return obj9467;
})();
cljs.core.reset_BANG_.call(null,lt.objs.keyboard.key_map,neue);
return lt.object.raise.call(null,lt.objs.app.app,new cljs.core.Keyword(null,"app.keys.change","app.keys.change",1612622863));
});
lt.objs.keyboard.refresh = (function refresh(){return lt.objs.keyboard.merge_keys.call(null,lt.objs.context.current.call(null));
});
cljs.core.add_watch.call(null,lt.objs.context.contexts,new cljs.core.Keyword(null,"commands2","commands2",3810146844),(function (_,___$1,___$2,ctx){return lt.objs.keyboard.merge_keys.call(null,ctx);
}));
lt.objs.keyboard.refresh.call(null);
lt.objs.keyboard.__GT_keystr = (function __GT_keystr(key,ev){return [cljs.core.str((cljs.core.truth_(ev.ctrlKey)?"ctrl-":null)),cljs.core.str((cljs.core.truth_(ev.metaKey)?((lt.objs.platform.mac_QMARK_.call(null))?"cmd-":"meta-"):null)),cljs.core.str((cljs.core.truth_(ev.altKey)?"alt-":null)),cljs.core.str((cljs.core.truth_((function (){var or__3408__auto__ = ev.altGraphKey;if(cljs.core.truth_(or__3408__auto__))
{return or__3408__auto__;
} else
{return lt.objs.keyboard.altgr;
}
})())?"altgr-":null)),cljs.core.str((cljs.core.truth_(ev.shiftKey)?"shift-":null)),cljs.core.str((function (){var or__3408__auto__ = key;if(cljs.core.truth_(or__3408__auto__))
{return or__3408__auto__;
} else
{return "";
}
})().toLowerCase())].join('');
});
lt.objs.keyboard.chord_BAR_mapping = (function chord_BAR_mapping(key,char$,ev){var current = (lt.objs.keyboard.chords["current"]);var cur_chords = (lt.objs.keyboard.chords["chords"]);var vec__9469 = (cljs.core.truth_(current)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(current),cljs.core.str(" "),cljs.core.str(lt.objs.keyboard.__GT_keystr.call(null,key,ev))].join(''),[cljs.core.str(current),cljs.core.str(" "),cljs.core.str(char$)].join('')], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [lt.objs.keyboard.__GT_keystr.call(null,key,ev),char$], null));var ks = cljs.core.nth.call(null,vec__9469,0,null);var ch = cljs.core.nth.call(null,vec__9469,1,null);var temp__4090__auto__ = (function (){var or__3408__auto__ = cur_chords.call(null,ch);if(cljs.core.truth_(or__3408__auto__))
{return or__3408__auto__;
} else
{return cur_chords.call(null,ks);
}
})();if(cljs.core.truth_(temp__4090__auto__))
{var chord = temp__4090__auto__;(lt.objs.keyboard.chords["current"] = chord);
if(cljs.core.truth_(lt.objs.keyboard.chord_timeout))
{lt.util.js.wait.call(null,lt.objs.keyboard.chord_timeout,(function (){return (lt.objs.keyboard.chords["current"] = null);
}));
} else
{}
return cljs.core.PersistentVector.EMPTY;
} else
{(lt.objs.keyboard.chords["current"] = null);
var or__3408__auto__ = cljs.core.deref.call(null,lt.objs.keyboard.key_map).call(null,ch);if(cljs.core.truth_(or__3408__auto__))
{return or__3408__auto__;
} else
{var or__3408__auto____$1 = cljs.core.deref.call(null,lt.objs.keyboard.key_map).call(null,ks);if(cljs.core.truth_(or__3408__auto____$1))
{return or__3408__auto____$1;
} else
{if(cljs.core.truth_(current))
{return cljs.core.PersistentVector.EMPTY;
} else
{return null;
}
}
}
}
});
lt.objs.keyboard._STAR_capture_STAR_ = true;
lt.objs.keyboard.passthrough = (function passthrough(){return lt.objs.keyboard._STAR_capture_STAR_ = false;
});
lt.objs.keyboard.disable = (function disable(){return lt.objs.keyboard.capturing_QMARK_ = false;
});
lt.objs.keyboard.enable = (function enable(){return lt.objs.keyboard.capturing_QMARK_ = true;
});
lt.objs.keyboard.all_mappings = (function all_mappings(key){return cljs.core.reduce.call(null,(function (res,p__9472){var vec__9473 = p__9472;var ctx = cljs.core.nth.call(null,vec__9473,0,null);var keys = cljs.core.nth.call(null,vec__9473,1,null);if(cljs.core.not.call(null,keys.call(null,key)))
{return res;
} else
{return cljs.core.conj.call(null,res,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ctx,keys.call(null,key)], null));
}
}),cljs.core.PersistentVector.EMPTY,cljs.core.deref.call(null,lt.objs.keyboard.keys));
});
lt.objs.keyboard.trigger = (function trigger(cmd){lt.objs.keyboard.activity.call(null);
if(cljs.core.coll_QMARK_.call(null,cmd))
{cljs.core.apply.call(null,lt.objs.command.exec_BANG_,cmd);
} else
{lt.objs.command.exec_BANG_.call(null,cmd);
}
return lt.objs.keyboard._STAR_capture_STAR_;
});
lt.objs.keyboard.capture = (function capture(key,char$,ev){lt.objs.keyboard.activity.call(null);
var _STAR_capture_STAR_9479 = lt.objs.keyboard._STAR_capture_STAR_;try{lt.objs.keyboard._STAR_capture_STAR_ = true;
var temp__4092__auto__ = lt.objs.keyboard.chord_BAR_mapping.call(null,key,char$,ev);if(cljs.core.truth_(temp__4092__auto__))
{var cs = temp__4092__auto__;var seq__9480_9484 = cljs.core.seq.call(null,cs);var chunk__9481_9485 = null;var count__9482_9486 = 0;var i__9483_9487 = 0;while(true){
if((i__9483_9487 < count__9482_9486))
{var c_9488 = cljs.core._nth.call(null,chunk__9481_9485,i__9483_9487);lt.objs.keyboard.trigger.call(null,c_9488);
{
var G__9489 = seq__9480_9484;
var G__9490 = chunk__9481_9485;
var G__9491 = count__9482_9486;
var G__9492 = (i__9483_9487 + 1);
seq__9480_9484 = G__9489;
chunk__9481_9485 = G__9490;
count__9482_9486 = G__9491;
i__9483_9487 = G__9492;
continue;
}
} else
{var temp__4092__auto___9493__$1 = cljs.core.seq.call(null,seq__9480_9484);if(temp__4092__auto___9493__$1)
{var seq__9480_9494__$1 = temp__4092__auto___9493__$1;if(cljs.core.chunked_seq_QMARK_.call(null,seq__9480_9494__$1))
{var c__4150__auto___9495 = cljs.core.chunk_first.call(null,seq__9480_9494__$1);{
var G__9496 = cljs.core.chunk_rest.call(null,seq__9480_9494__$1);
var G__9497 = c__4150__auto___9495;
var G__9498 = cljs.core.count.call(null,c__4150__auto___9495);
var G__9499 = 0;
seq__9480_9484 = G__9496;
chunk__9481_9485 = G__9497;
count__9482_9486 = G__9498;
i__9483_9487 = G__9499;
continue;
}
} else
{var c_9500 = cljs.core.first.call(null,seq__9480_9494__$1);lt.objs.keyboard.trigger.call(null,c_9500);
{
var G__9501 = cljs.core.next.call(null,seq__9480_9494__$1);
var G__9502 = null;
var G__9503 = 0;
var G__9504 = 0;
seq__9480_9484 = G__9501;
chunk__9481_9485 = G__9502;
count__9482_9486 = G__9503;
i__9483_9487 = G__9504;
continue;
}
}
} else
{}
}
break;
}
return lt.objs.keyboard._STAR_capture_STAR_;
} else
{return null;
}
}finally {lt.objs.keyboard._STAR_capture_STAR_ = _STAR_capture_STAR_9479;
}});
lt.objs.keyboard.capture_up = (function capture_up(key,char$,ev){var or__3408__auto__ = cljs.core.deref.call(null,lt.objs.keyboard.key_map).call(null,char$);if(cljs.core.truth_(or__3408__auto__))
{return or__3408__auto__;
} else
{return cljs.core.deref.call(null,lt.objs.keyboard.key_map).call(null,lt.objs.keyboard.__GT_keystr.call(null,key,ev));
}
});
lt.objs.keyboard.meta = ((lt.objs.platform.mac_QMARK_.call(null))?"cmd":"ctrl");
lt.objs.keyboard.cmd__GT_bindings = (function cmd__GT_bindings(cmd){return cljs.core.filter.call(null,(function (p1__9505_SHARP_){return cljs.core.seq.call(null,cljs.core.second.call(null,p1__9505_SHARP_));
}),(function (){var iter__4119__auto__ = (function iter__9515(s__9516){return (new cljs.core.LazySeq(null,(function (){var s__9516__$1 = s__9516;while(true){
var temp__4092__auto__ = cljs.core.seq.call(null,s__9516__$1);if(temp__4092__auto__)
{var s__9516__$2 = temp__4092__auto__;if(cljs.core.chunked_seq_QMARK_.call(null,s__9516__$2))
{var c__4117__auto__ = cljs.core.chunk_first.call(null,s__9516__$2);var size__4118__auto__ = cljs.core.count.call(null,c__4117__auto__);var b__9518 = cljs.core.chunk_buffer.call(null,size__4118__auto__);if((function (){var i__9517 = 0;while(true){
if((i__9517 < size__4118__auto__))
{var vec__9521 = cljs.core._nth.call(null,c__4117__auto__,i__9517);var ctx = cljs.core.nth.call(null,vec__9521,0,null);var ms = cljs.core.nth.call(null,vec__9521,1,null);cljs.core.chunk_append.call(null,b__9518,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ctx,cljs.core.first.call(null,cljs.core.first.call(null,cljs.core.filter.call(null,((function (i__9517,vec__9521,ctx,ms,c__4117__auto__,size__4118__auto__,b__9518,s__9516__$2,temp__4092__auto__){
return (function (p1__9506_SHARP_){return cljs.core._EQ_.call(null,cljs.core.first.call(null,cljs.core.second.call(null,p1__9506_SHARP_)),cmd);
});})(i__9517,vec__9521,ctx,ms,c__4117__auto__,size__4118__auto__,b__9518,s__9516__$2,temp__4092__auto__))
,ms)))], null));
{
var G__9523 = (i__9517 + 1);
i__9517 = G__9523;
continue;
}
} else
{return true;
}
break;
}
})())
{return cljs.core.chunk_cons.call(null,cljs.core.chunk.call(null,b__9518),iter__9515.call(null,cljs.core.chunk_rest.call(null,s__9516__$2)));
} else
{return cljs.core.chunk_cons.call(null,cljs.core.chunk.call(null,b__9518),null);
}
} else
{var vec__9522 = cljs.core.first.call(null,s__9516__$2);var ctx = cljs.core.nth.call(null,vec__9522,0,null);var ms = cljs.core.nth.call(null,vec__9522,1,null);return cljs.core.cons.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ctx,cljs.core.first.call(null,cljs.core.first.call(null,cljs.core.filter.call(null,((function (vec__9522,ctx,ms,s__9516__$2,temp__4092__auto__){
return (function (p1__9506_SHARP_){return cljs.core._EQ_.call(null,cljs.core.first.call(null,cljs.core.second.call(null,p1__9506_SHARP_)),cmd);
});})(vec__9522,ctx,ms,s__9516__$2,temp__4092__auto__))
,ms)))], null),iter__9515.call(null,cljs.core.rest.call(null,s__9516__$2)));
}
} else
{return null;
}
break;
}
}),null,null));
});return iter__4119__auto__.call(null,cljs.core.deref.call(null,lt.objs.keyboard.keys));
})());
});
lt.objs.keyboard.cmd__GT_current_binding = (function cmd__GT_current_binding(cmd){return cljs.core.first.call(null,cljs.core.filter.call(null,(function (p1__9524_SHARP_){return cljs.core.set.call(null,cljs.core.second.call(null,p1__9524_SHARP_)).call(null,cmd);
}),cljs.core.deref.call(null,lt.objs.keyboard.key_map)));
});
Mousetrap.handleKey = (function (key,char$,ev){if(cljs.core.truth_((function (){var and__3396__auto__ = lt.objs.keyboard.capturing_QMARK_;if(cljs.core.truth_(and__3396__auto__))
{var and__3396__auto____$1 = typeof key === 'string';if(and__3396__auto____$1)
{return lt.objs.keyboard.capture.call(null,key,char$,ev);
} else
{return and__3396__auto____$1;
}
} else
{return and__3396__auto__;
}
})()))
{ev.preventDefault();
return ev.stopPropagation();
} else
{return null;
}
});
Mousetrap.handleKeyUp = (function (key,char$,ev){if(cljs.core.truth_((function (){var and__3396__auto__ = lt.objs.keyboard.capturing_QMARK_;if(cljs.core.truth_(and__3396__auto__))
{var and__3396__auto____$1 = typeof key === 'string';if(and__3396__auto____$1)
{return lt.objs.keyboard.capture_up.call(null,key,char$,ev);
} else
{return and__3396__auto____$1;
}
} else
{return and__3396__auto__;
}
})()))
{ev.preventDefault();
return ev.stopPropagation();
} else
{return null;
}
});
lt.objs.keyboard.__BEH__chord_timeout = (function __BEH__chord_timeout(this$,timeout){return lt.objs.keyboard.chord_timeout = timeout;
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.objs.keyboard","chord-timeout","lt.objs.keyboard/chord-timeout",4274129831),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.objs.keyboard.__BEH__chord_timeout,new cljs.core.Keyword(null,"desc","desc",1016984067),"App: Set the timeout for chorded shortcuts",new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"object.instant","object.instant",773332388),null], null), null),new cljs.core.Keyword(null,"type","type",1017479852),new cljs.core.Keyword(null,"user","user",1017503549));
